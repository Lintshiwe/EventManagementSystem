 
package ac.za.tut.eventmanagement;

import techDiscipline.m.kn.lp.xe.am.Event;
 
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
 
import javax.swing.JOptionPane;

 
public class DeleteEvent extends javax.swing.JFrame {

   
    public DeleteEvent() {
    
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        SearchValue = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        HomePageBtn = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TechDisciples");
        setBackground(new java.awt.Color(0, 0, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        setForeground(new java.awt.Color(0, 51, 255));
        setLocationByPlatform(true);

        jLabel1.setFont(new java.awt.Font("STCaiyun", 1, 18)); // NOI18N
        jLabel1.setText("                             Delete Event ");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        jLabel2.setText("Event ID :");

        SearchValue.setText(" ");

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete ");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        HomePageBtn.setText("Home Page");
        HomePageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomePageBtnActionPerformed(evt);
            }
        });

        ExitBtn.setText("Exit");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(SearchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(HomePageBtn)
                        .addGap(62, 62, 62)
                        .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(281, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HomePageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomePageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomePageBtnActionPerformed
        this.dispose();
        new HomePage().setVisible(true);
    }//GEN-LAST:event_HomePageBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        
        
        if(getEvent()==null){
             TextArea.setText("No Event Was Found");
        }else{
            TextArea.setText(getEvent().toString());
        }
        
         
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        
       Event event=getEvent();

       updateEventsData(event);
        
        
        
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
       this.dispose();
    }//GEN-LAST:event_ExitBtnActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton HomePageBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchValue;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private Event getEvent() {
        
       
           Event event=null;
          String event_Id=SearchValue.getText().trim();
        
        File file =new File("events.text");

            try(BufferedReader bfr=new BufferedReader(new FileReader(file))) {
                
                if(file.exists()){
                 
                 String line;
                 
                 while((line=bfr.readLine())!=null){
                     
                     String[] eventsArray=line.split("#");
                     
                     String eventId = eventsArray[0];
                     String eventName = eventsArray[1];
                     String eventCategory = eventsArray[2];
                     String date = eventsArray[3];
                     String time = eventsArray[4];
                     String duration = eventsArray[5];
                     
                     if(eventId.equals(event_Id)){
                        
                     event =new Event(eventId,eventName,eventCategory,date,duration,time);
                       
                     } 
                     
                 }
  
                }
                else{
                    JOptionPane.showMessageDialog(null,"file does not exits","Error",JOptionPane.ERROR_MESSAGE); 
                }
                
                 
            } 
                catch (IOException ex) {
                    
               JOptionPane.showMessageDialog(null,ex.getMessage()); 
            }
          return event;
  
            
    }


    private void updateEventsData(Event event) {
        ArrayList<Event> eventsList=readAll();
        File file =new File("events.text");
        
        if(!file.exists()){
            try {
                file.createNewFile();
            } catch (IOException ex) {
                  // do nothing
            }
        }

        try(BufferedWriter writer=new BufferedWriter(new FileWriter(file))){
       
 
           for(int x=0;x<eventsList.size();x++){
             
               
               if(!event.getEventId().equals(eventsList.get(x).getEventId() )){
                writer.write(
                    eventsList.get(x).getEventId()+"#"+
                    eventsList.get(x).getEventName()+"#"+
                    eventsList.get(x).getEventCategory()+"#"+
                    eventsList.get(x).getDate()+"#"+
                    eventsList.get(x).getTime()+"#"+
                    eventsList.get(x).getDuration());
                    writer.newLine();
               }
 
           }
 
          
        }catch (IOException ex) {
          // do nothing
        }
        
      
    }

    private ArrayList<Event> readAll() {

        ArrayList<Event> list = new ArrayList<>();
        File file = new File("events.text");

        try (BufferedReader bfr = new BufferedReader(new FileReader(file))) {

            if (file.exists()) {

                String line;

                while ((line = bfr.readLine()) != null) {

                    String[] eventsArray = line.split("#");

                    String eventId = eventsArray[0];
                    String eventName = eventsArray[1];
                    String eventCategory = eventsArray[2];
                    String date = eventsArray[3];
                    String time = eventsArray[4];
                    String duration = eventsArray[5];

                    list.add(new Event(eventId, eventName, eventCategory, date, duration, time));

                }

            } else {
                JOptionPane.showMessageDialog(null, "file does not exits", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (IOException ex) {

            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

        return list;

    }
}
