 
package ac.za.tut.eventmanagement;

import techDiscipline.m.kn.lp.xe.am.Event;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

 
public class EditEvent extends javax.swing.JFrame {

    /**
     * Creates new form EditEvent
     */
    public EditEvent() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        EventName = new javax.swing.JTextField();
        Date = new javax.swing.JTextField();
        Duration = new javax.swing.JTextField();
        Time = new javax.swing.JTextField();
        SaveEventButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        EventId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        EventCategory = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        honeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 255));

        jPanel1.setBackground(new java.awt.Color(0, 51, 255));

        jLabel1.setText("Event Name : ");

        jLabel3.setText("Date(dd/mm/yy) : ");

        jLabel4.setText("Duration : ");

        jLabel5.setText("Time : ");

        jLabel6.setFont(new java.awt.Font("STCaiyun", 1, 18)); // NOI18N
        jLabel6.setText("Edit Event");

        EventName.setText(" ");
        EventName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventNameActionPerformed(evt);
            }
        });

        Date.setText(" ");
        Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateActionPerformed(evt);
            }
        });

        Duration.setText(" ");
        Duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DurationActionPerformed(evt);
            }
        });

        Time.setText(" ");

        SaveEventButton.setText("Edit");
        SaveEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveEventButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Event Id :");

        EventId.setText(" ");
        EventId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventIdActionPerformed(evt);
            }
        });

        jLabel8.setText("Event Category :");

        EventCategory.setText(" ");
        EventCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventCategoryActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        honeBtn.setText("Home");
        honeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                honeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(28, 28, 28)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(EventName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(EventId, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(searchBtn))))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(EventCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(SaveEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(honeBtn))
                                    .addComponent(Duration, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(416, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel6)
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(EventId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(EventCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveEventButton)
                    .addComponent(honeBtn))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EventNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EventNameActionPerformed

    private void DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateActionPerformed

    private void DurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DurationActionPerformed

    private void SaveEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveEventButtonActionPerformed

        String date = Date.getText().trim();
        String duration=Duration.getText().trim();
        String category = EventCategory.getText().trim();
        String id = EventId.getText().trim();
        String name = EventName.getText().trim();
        String time = Time.getText().trim();

        

        Event event=new Event(id,name,category, date, duration, time);
        
        

        updateEventsData(id,event);

        
        clear();

    }//GEN-LAST:event_SaveEventButtonActionPerformed

    private void EventIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EventIdActionPerformed

    private void EventCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EventCategoryActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
      
        Event event=getEvent() ;
        if(event==null){
            JOptionPane.showMessageDialog(null, "No Event Was Found");
        }else{
            
     
        
         Date.setText(event.getDate());
         Duration.setText(event.getDuration());
         EventCategory.setText(event.getEventCategory());
         EventId.setText(event.getEventId());
         EventName.setText(event.getEventName());
         Time.setText(event.getTime());
          }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void honeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_honeBtnActionPerformed
      this.dispose();
        new HomePage().setVisible(true);
    }//GEN-LAST:event_honeBtnActionPerformed

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Date;
    private javax.swing.JTextField Duration;
    private javax.swing.JTextField EventCategory;
    private javax.swing.JTextField EventId;
    private javax.swing.JTextField EventName;
    private javax.swing.JButton SaveEventButton;
    private javax.swing.JTextField Time;
    private javax.swing.JButton honeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables


    private Event getEvent() {
        
       
           Event event=null;
          String event_Id=EventId.getText().trim();
        
        File file =new File("events.text");

            try(BufferedReader bfr=new BufferedReader(new FileReader(file))) {
                
                if(file.exists()){
                 
                 String line;
                 
                 while((line=bfr.readLine())!=null){
                     
                     String[] eventsArray=line.split("#");
                     
                     String eventId = eventsArray[0];
                     String eventName = eventsArray[1];
                     String eventCategory = eventsArray[2];
                     String date = eventsArray[3];
                     String time = eventsArray[4];
                     String duration = eventsArray[5];
                     
                     if(eventId.equals(event_Id)){
                        
                     event =new Event(eventId,eventName,eventCategory,date,duration,time);
                       
                     } 
                     
                 }
  
                }
                else{
                    JOptionPane.showMessageDialog(null,"file does not exits","Error",JOptionPane.ERROR_MESSAGE); 
                }
                
                 
            } 
                catch (IOException ex) {
                    
               JOptionPane.showMessageDialog(null,ex.getMessage()); 
            }
          return event;
  
            
    }

    private void updateEventsData(String id, Event event) {
        ArrayList<Event> eventsList=readAll();
        File file =new File("events.text");
        
        if(!file.exists()){
            try {
                file.createNewFile();
            } catch (IOException ex) {
                  // do nothing
            }
        }

        try(BufferedWriter writer=new BufferedWriter(new FileWriter(file))){
       
 
           for(int x=0;x<eventsList.size();x++){
             
               
               if(eventsList.get(x).getEventId().equals(id)){  
                writer.write(
                    event.getEventId()+"#"+
                    event.getEventName()+"#"+
                    event.getEventCategory()+"#"+
                    event.getDate()+"#"+
                    event.getTime()+"#"+
                    event.getDuration());
                    writer.newLine();
               }else{
                writer.write(
                    eventsList.get(x).getEventId()+"#"+
                    eventsList.get(x).getEventName()+"#"+
                    eventsList.get(x).getEventCategory()+"#"+
                    eventsList.get(x).getDate()+"#"+
                    eventsList.get(x).getTime()+"#"+
                    eventsList.get(x).getDuration());
                    writer.newLine();
               }
 
           }
 
          
        }catch (IOException ex) {
          // do nothing
        }
        
      
    }

    private ArrayList<Event> readAll() {

        ArrayList<Event> list = new ArrayList<>();
        File file = new File("events.text");

        try (BufferedReader bfr = new BufferedReader(new FileReader(file))) {

            if (file.exists()) {

                String line;

                while ((line = bfr.readLine()) != null) {

                    String[] eventsArray = line.split("#");

                    String eventId = eventsArray[0];
                    String eventName = eventsArray[1];
                    String eventCategory = eventsArray[2];
                    String date = eventsArray[3];
                    String time = eventsArray[4];
                    String duration = eventsArray[5];

                    list.add(new Event(eventId, eventName, eventCategory, date, duration, time));

                }

            } else {
                JOptionPane.showMessageDialog(null, "file does not exits", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (IOException ex) {

            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

        return list;

    }

    private void clear() {
         Date.setText("");
         Duration.setText("");
         EventCategory.setText("");
         EventId.setText("");
         EventName.setText("");
          Time.setText("");  
    }
}
